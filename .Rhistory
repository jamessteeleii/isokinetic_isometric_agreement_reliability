targets::tar_make()
targets::tar_make()
get_prior(isokinetic_model)
#| message: false
#| warning: false
#| echo: false
targets::tar_load(isometric_model)
targets::tar_load(isometric_bias_summary)
targets::tar_load(isometric_loamr_summary)
isometric_bias_summary
isometric_loamr_summary
isometric_loamr_summary |>
group_by(exercise) |>
slice(n=1)
isometric_loamr_summary |>
group_by(exercise) |>
slice_head(n=1)
targets::tar_make()
install.packages("quarto")
targets::tar_make()
targets::tar_make()
targets::tar_make()
targets::tar_make()
isometric_bias_summary
isometric_loamr_summary
isometric_loamr_summary <- isometric_loamr_summary |>
group_by(exercise) |>
slice_head(n=1)
isometric_loamr_summary
isometric_loamr_summary$mean[1]
#| message: false
#| warning: false
#| echo: false
#| label: fig-isometric-plot
#| fig-width: 10
#| fig-height: 6.66
#| fig-cap: Bias and limits of agreement with the mean for isometric outcomes for both between- and within-day.
targets::tar_load(combined_isometric_plot)
combined_isometric_plot
#| message: false
#| warning: false
#| echo: false
targets::tar_load(isokinetic_model)
targets::tar_load(isokinetic_bias_summary)
targets::tar_load(isokinetic_loamr_summary)
isokinetic_loamr_summary <- isokinetic_loamr_summary |>
group_by(exercise) |>
slice_head(n=1)
isokinetic_loamr_summary
targets::tar_load(isokinetic_model)
targets::tar_load(isokinetic_loa_summary)
isokinetic_loamr_summary <- isokinetic_loa_summary |>
group_by(exercise) |>
slice_head(n=1)
isokinetic_loa_summary <- isokinetic_loa_summary |>
group_by(exercise) |>
slice_head(n=1)
isokinetic_loa_summary
targets::tar_load(isokinetic_bias_loa_summary)
isokinetic_bias_loa_summary
isokinetic_bias_loa_summary |>
group_by(exercise) |>
slice_head(n=1)
isometric_loamr_summary |>
group_by(exercise, bw) |>
slice_head(n=1)
targets::tar_load(isometric_loamr_summary)
isometric_loamr_summary |>
group_by(exercise, bw) |>
slice_head(n=1)
isometric_loamr_summary
isometric_loamr_summary |>
group_by(exercise, bw_w) |>
slice_head(n=1)
targets::tar_load(isometric_loamr_summary)
isometric_loamr_summary_bw <- isometric_loamr_summary |>
filter(bw_w == "bw")
group_by(exercise) |>
slice_head(n=1)
targets::tar_load(isometric_loamr_summary)
isometric_loamr_summary_bw <- isometric_loamr_summary |>
filter(bw_w == "bw") |>
group_by(exercise) |>
slice_head(n=1)
isometric_loamr_summary_w <- isometric_loamr_summary |>
filter(bw_w == "w") |>
group_by(exercise) |>
slice_head(n=1)
isometric_loamr_summary_bw
isometric_loamr_summary_w
isometric_loamr_summary_w$mean[1]
isokinetic_bias_loa_summary_con <- isokinetic_bias_loa_summary |>
filter(con_ecc == "Concentric")
isokinetic_bias_loa_summary_ecc <- isokinetic_bias_loa_summary |>
filter(con_ecc == "Eccentric")
isokinetic_bias_loa_summary_con
targets::tar_load(isokinetic_bias_loa_summary)
isokinetic_bias_loa_summary_con <- isokinetic_bias_loa_summary |>
filter(con_ecc == "Concentric") |>
group_by(exercise) |>
slice_head(n=1)
isokinetic_bias_loa_summary_ecc <- isokinetic_bias_loa_summary |>
filter(con_ecc == "Eccentric") |>
group_by(exercise) |>
slice_head(n=1)
isokinetic_bias_loa_summary_ecc
#| message: false
#| warning: false
#| echo: false
#| label: fig-isokinetic-plot
#| fig-width: 10
#| fig-height: 6.66
#| fig-cap: Between day bias and limits of agreement for isokinetic outcomes.
targets::tar_load(isokinetic_BA_plot)
isokinetic_BA_plot
targets::tar_load(isometric_model)
performance::variance_decomposition(isometric_model)
vpc <- performance::variance_decomposition(isometric_model)
View(vpc)
vpc_cp <- performance::variance_decomposition(isometric_model, resp = "cp")
vpc_cp
vpc_lp <- performance::variance_decomposition(isometric_model, resp = "lp")
vpc_lp
vpc_row <- performance::variance_decomposition(isometric_model, resp = "row")
vpc_row
targets::tar_load(isokinetic_model)
isokinetic_model
vpc_cp_con <- performance::variance_decomposition(isokinetic_model, resp = "deltacpcon")
targets::tar_load(data)
View(data)
isokinetic_data <- data |>
select(1:15, contains("best")) |>
pivot_longer(16:27,
names_to = "name",
values_to = "value") |>
separate(name,
into = c("day", "exercise", "x", "y", "z", "a", "con_ecc")) |>
select(-x,-y,-z,-a) |>
mutate(day = case_when(
day == "t1" ~ "d1",
day == "t2" ~ "d2"
))
library(tidyverse)
library(here)
library(janitor)
library(loamr)
library(patchwork)
library(rstan)
library(brms)
library(tidybayes)
rstan_options(auto_write = TRUE)
options(mc.cores = parallel::detectCores() - 1)
isokinetic_data <- data |>
select(1:15, contains("best")) |>
pivot_longer(16:27,
names_to = "name",
values_to = "value") |>
separate(name,
into = c("day", "exercise", "x", "y", "z", "a", "con_ecc")) |>
select(-x,-y,-z,-a) |>
mutate(day = case_when(
day == "t1" ~ "d1",
day == "t2" ~ "d2"
))
View(isokinetic_data)
isokinetic_data <- data |>
select(1:15, contains("best")) |>
pivot_longer(16:27,
names_to = "name",
values_to = "value") |>
separate(name,
into = c("day", "exercise", "x", "y", "z", "a", "con_ecc")) |>
select(-x,-y,-z,-a) |>
mutate(day = case_when(
day == "t1" ~ "d1",
day == "t2" ~ "d2"
)) |>
mutate_if(is.character,as.factor) |>
pivot_wider(names_from = c("day", "exercise", "con_ecc"),
values_from = "value",
id_cols = c("participant"))
View(isokinetic_data)
isokinetic_data <- data |>
select(1:15, contains("best")) |>
pivot_longer(16:27,
names_to = "name",
values_to = "value") |>
separate(name,
into = c("day", "exercise", "x", "y", "z", "a", "con_ecc")) |>
select(-x,-y,-z,-a) |>
mutate(day = case_when(
day == "t1" ~ "d1",
day == "t2" ~ "d2"
)) |>
mutate_if(is.character,as.factor) |>
pivot_wider(names_from = c("exercise", "con_ecc"),
values_from = "value",
id_cols = c("participant"))
View(isokinetic_data)
isokinetic_data <- data |>
select(1:15, contains("best")) |>
pivot_longer(16:27,
names_to = "name",
values_to = "value") |>
separate(name,
into = c("day", "exercise", "x", "y", "z", "a", "con_ecc")) |>
select(-x,-y,-z,-a) |>
mutate(day = case_when(
day == "t1" ~ "d1",
day == "t2" ~ "d2"
)) |>
mutate_if(is.character,as.factor) |>
pivot_wider(names_from = c("exercise", "con_ecc"),
values_from = "value",
id_cols = c("participant", "day"))
View(isokinetic_data)
vpc_cp <- performance::variance_decomposition(isometric_model, resp = "cp", by_group = TRUE)
vpc_cp
vpc_cp <- performance::icc(isometric_model, resp = "cp", by_group = TRUE)
vpc_cp
vpc_cp <- performance::variance_decomposition(isometric_model, resp = "cp", re_formula = ~ (1|participant))
vpc_cp
vpc_cp <- performance::variance_decomposition(isometric_model, resp = "cp", re_formula = ~ (1|participant:day))
vpc_cp
isometric_model
vpc_cp <- performance::variance_decomposition(isometric_model, resp = "cp", re_formula = ~ (1|participant) + (1|participant:day))
vpc_cp
isokinetic_data
cp_con_bf <- bf(cp_con ~ 1 + day + (1|participant))
lp_con_bf <- bf(lp_con ~ 1 + day + (1|participant))
row_con_bf <- bf(row_con ~ 1 + day + (1|participant))
cp_ecc_bf <- bf(cp_ecc ~ 1 + day + (1|participant))
lp_ecc_bf <- bf(lp_ecc ~ 1 + day + (1|participant))
row_ecc_bf <- bf(row_ecc ~ 1 + day + (1|participant))
brm_model_isokinetic <- brm(cp_con_bf + lp_con_bf + row_con_bf +
cp_ecc_bf + lp_ecc_bf + row_ecc_bf +
set_rescor(rescor = TRUE),
data = isokinetic_data,
chains = 4,
cores = 4,
seed = 1988,
warmup = 2000,
iter = 8000,
control = list(adapt_delta = 0.99),
save_pars = save_pars(all = TRUE))
plot(brm_model_isokinetic)
vpc_cp_con <- performance::variance_decomposition(brm_model_isokinetic, resp = "cpcon")
vpc_cp_con <- performance::variance_decomposition(brm_model_isokinetic)
brm_model_isokinetic
cp_con_bf <- bf(cp_con ~ 1 + (1|a|participant) + (1|b|day))
lp_con_bf <- bf(lp_con ~ 1 + (1|a|participant) + (1|b|day))
row_con_bf <- bf(row_con ~ 1 + (1|a|participant) + (1|b|day))
cp_ecc_bf <- bf(cp_ecc ~ 1 + (1|a|participant) + (1|b|day))
lp_ecc_bf <- bf(lp_ecc ~ 1 + (1|a|participant) + (1|b|day))
row_ecc_bf <- bf(row_ecc ~ 1 + (1|a|participant) + (1|b|day))
brm_model_isokinetic <- brm(cp_con_bf + lp_con_bf + row_con_bf +
cp_ecc_bf + lp_ecc_bf + row_ecc_bf +
set_rescor(rescor = TRUE),
data = isokinetic_data,
chains = 4,
cores = 4,
seed = 1988,
warmup = 2000,
iter = 8000,
control = list(adapt_delta = 0.99),
save_pars = save_pars(all = TRUE))
plot(brm_model_isokinetic)
performance::variance_decomposition(brm_model_isokinetic, resp = "cpcon")
brm_model_isokinetic
vpc_cp_con <- performance::variance_decomposition(brm_model_isokinetic, resp = "cpcon", re_formula = ~ (1|participant))
SimplyAgree::reli_stats(measure = "cp_con",
item = "day",
wide = FALSE,
data = isokinetic_data)
SimplyAgree::reli_stats(measure = "cp_con",
item = "day",
wide = FALSE,
id = "participant",
data = isokinetic_data)
sa_icc <- SimplyAgree::reli_stats(measure = "cp_con",
item = "day",
wide = FALSE,
id = "participant",
data = isokinetic_data)
sa_icc
View(sa_icc)
insight::get_variance(isokinetic_model)
insight::get_variance(brm_model_isokinetic)
insight::get_variance_random(brm_model_isokinetic)
insight::get_variance_random(brm_model_isokinetic, resp = "cpcon")
brm_model_isokinetic
cp_con_bf <- bf(cp_con ~ 1 + (1|a|participant))
lp_con_bf <- bf(lp_con ~ 1 + (1|a|participant))
row_con_bf <- bf(row_con ~ 1 + (1|a|participant))
cp_ecc_bf <- bf(cp_ecc ~ 1 + (1|a|participant))
lp_ecc_bf <- bf(lp_ecc ~ 1 + (1|a|participant))
row_ecc_bf <- bf(row_ecc ~ 1 + (1|a|participant))
brm_model_isokinetic <- brm(cp_con_bf + lp_con_bf + row_con_bf +
cp_ecc_bf + lp_ecc_bf + row_ecc_bf +
set_rescor(rescor = TRUE),
data = isokinetic_data,
chains = 4,
cores = 4,
seed = 1988,
warmup = 2000,
iter = 8000,
control = list(adapt_delta = 0.99),
save_pars = save_pars(all = TRUE))
plot(brm_model_isokinetic)
performance::variance_decomposition(brm_model_isokinetic, resp = "cpcon")
performance::variance_decomposition(brm_model_isokinetic, resp = "cpcon", re_formula = ~ (1|participant))
insight::is_mixed_model(brm_model_isokinetic)
insight::is_multivariate(brm_model_isokinetic)
model<-brm_model_isokinetic
if (insight::is_multivariate(model)) {
resp <- insight::find_response(model)
is.mixed <- unlist(lapply(resp, function(i) mi[[i]]$is_mixed), use.names = FALSE)
if (!any(is.mixed)) {
insight::format_warning("`model` has no random effects.")
return(NULL)
}
} else if (!insight::is_mixed_model(model)) {
insight::format_warning("`model` has no random effects.")
return(NULL)
}
?is_mixed_model
?is_multivariate
brm_model_isokinetic <- brm(cp_con_bf ,
data = isokinetic_data,
chains = 4,
cores = 4,
seed = 1988,
warmup = 2000,
iter = 8000,
control = list(adapt_delta = 0.99),
save_pars = save_pars(all = TRUE))
vpc_cp_con <- performance::variance_decomposition(brm_model_isokinetic)
vpc_cp_con
brm_model_isokinetic <- brm(cp_con_bf + lp_con_bf + row_con_bf +
cp_ecc_bf + lp_ecc_bf + row_ecc_bf +
set_rescor(rescor = TRUE),
data = isokinetic_data,
chains = 4,
cores = 4,
seed = 1988,
warmup = 2000,
iter = 8000,
control = list(adapt_delta = 0.99),
save_pars = save_pars(all = TRUE))
insight::model_info(brm_model_isokinetic)
?posterior_predict
vpc_cp_con <- performance::variance_decomposition(brm_model_isokinetic, resp = "cpcon", re_formula = ~ (1|participant))
vpc_cp
var_total <- brms::posterior_predict(brm_model_isokinetic, resp = "cpcon", re_formula = NULL)
var_total
PPD <- brms::posterior_predict(brm_model_isokinetic, resp = "cpcon", re_formula = NA)
var_total <- apply(PPD, MARGIN = 1, FUN = stats::var)
PPD <- brms::posterior_predict(brm_model_isokinetic, resp = "cpcon", re_formula = NULL)
var_total <- apply(PPD, MARGIN = 1, FUN = stats::var)
PPD_0 <- brms::posterior_predict(brm_model_isokinetic, resp = "cpcon", re_formula = NA)
var_rand_intercept <- apply(PPD_0, MARGIN = 1, FUN = stats::var)
var_total
var_icc <- var_rand_intercept/var_total
mean_qi(var_icc)
mean_qi(1-var_icc)
brm_model_isokinetic$formula$responses
resp <- brm_model_isokinetic$formula$responses
vpc_cp
m_qi <- mean_qi(1-var_icc)
m_qi$y
var_ratios <- tibble(
resp = as.character(),
mean = as.numeric(),
lower_qi = as.numeric(),
upper_qi = as.numeric()
)
resp <- brm_model_isokinetic$formula$responses
set.seed(1988)
for(i in resp) {
PPD <- brms::posterior_predict(brm_model_isokinetic, resp = i, re_formula = NULL)
var_total <- apply(PPD, MARGIN = 1, FUN = stats::var)
PPD_0 <- brms::posterior_predict(brm_model_isokinetic, resp = i, re_formula = NA)
var_rand_intercept <- apply(PPD_0, MARGIN = 1, FUN = stats::var)
var_icc <- var_rand_intercept/var_total
m_qi <- mean_qi(1-var_icc)
var_ratios <- bind_rows(var_ratios,
tibble(
resp = i,
mean = m_qi$y,
lower_qi = m_qi$ymin,
upper_qi = m_qi$ymax
))
}
var_ratios
get_prior(brm_model_isokinetic)
as_tibble(vpc_cp)
as_tibble(vpc_cp$ICC_decomposed)
vpc_cp$ICC_decomposed
vpc$ICC_CI
vpc$ICC_CI[1]
targets::tar_make()
targets::tar_load(isometric_icc)
targets::tar_load(isokinetic_icc)
isometric_icc
isokinetic_icc
resp <- isometric_model$formula$responses
resp
var_ratios <- tibble(
resp = as.character(),
bw_w = as.character(),
mean = as.numeric(),
lower_qi = as.numeric(),
upper_qi = as.numeric()
)
for(i in resp) {
var_icc_bw <- performance::variance_decomposition(isometric_model, resp = i, re_formula = ~ (1|participant))
var_icc_w <- performance::variance_decomposition(isometric_model, resp = i, re_formula = ~ (1|participant) + (1|partiicpant:day))
var_icc_bw <- tibble(
resp = i,
bw_w = "bw",
mean = var_icc_bw$ICC_decomposed,
lower_qi = var_icc_bw$ICC_CI[1],
upper_qi = var_icc_bw$ICC_CI[2]
)
var_icc_w <- tibble(
resp = i,
bw_w = "w",
mean = var_icc_w$ICC_decomposed,
lower_qi = var_icc_w$ICC_CI[1],
upper_qi = var_icc_w$ICC_CI[2]
)
var_ratios <- bind_rows(var_ratios,
var_icc_bw,
var_icc_w)
}
for(i in resp) {
var_icc_bw <- performance::variance_decomposition(isometric_model, resp = i, re_formula = ~ (1|participant))
var_icc_w <- performance::variance_decomposition(isometric_model, resp = i, re_formula = ~ (1|participant) + (1|participant:day))
var_icc_bw <- tibble(
resp = i,
bw_w = "bw",
mean = var_icc_bw$ICC_decomposed,
lower_qi = var_icc_bw$ICC_CI[1],
upper_qi = var_icc_bw$ICC_CI[2]
)
var_icc_w <- tibble(
resp = i,
bw_w = "w",
mean = var_icc_w$ICC_decomposed,
lower_qi = var_icc_w$ICC_CI[1],
upper_qi = var_icc_w$ICC_CI[2]
)
var_ratios <- bind_rows(var_ratios,
var_icc_bw,
var_icc_w)
}
View(var_ratios)
performance::variance_decomposition(isometric_model, resp = "cp", by_group = TRUE)
performance::variance_decomposition(isometric_model, resp = "cp", re_formula = ~ (1|participant))
performance::variance_decomposition(isometric_model, resp = "cp", re_formula = ~ (1|participant) + (1|participant:day))
performance::variance_decomposition(isometric_model, resp = "cp")
targets::tar_make()
targets::tar_load(isometric_icc)
isometric_icc
resp <- isometric_model$formula$responses
var_ratios <- tibble(
resp = as.character(),
bw_w = as.character(),
mean = as.numeric(),
lower_qi = as.numeric(),
upper_qi = as.numeric()
)
resp <- isometric_model$formula$responses
var_ratios <- tibble(
resp = as.character(),
bw_w = as.character(),
mean = as.numeric(),
lower_qi = as.numeric(),
upper_qi = as.numeric()
)
for(i in resp) {
var_icc_bw <- performance::variance_decomposition(isometric_model, resp = i, re_formula = ~ (1|participant))
var_icc_w <- performance::variance_decomposition(isometric_model, resp = i, re_formula = ~ (1|participant) + (1|participant:day))
var_icc_bw <- tibble(
resp = i,
bw_w = "bw",
mean = var_icc_bw$ICC_decomposed,
lower_qi = var_icc_bw$ICC_CI[1],
upper_qi = var_icc_bw$ICC_CI[2]
)
var_icc_w <- tibble(
resp = i,
bw_w = "w",
mean = var_icc_w$ICC_decomposed,
lower_qi = var_icc_w$ICC_CI[1],
upper_qi = var_icc_w$ICC_CI[2]
)
var_ratios <- bind_rows(var_ratios,
var_icc_bw,
var_icc_w)
}
var_ratios
targets::tar_make()
performance::variance_decomposition(isometric_model, resp = "cp")
isometric_icc
targets::tar_load(isometric_icc)
isometric_icc
isometric_icc$mean[1]
round(isometric_icc$mean[1],2)
round(isometric_icc$mean[1],3)
isokinetic_icc
round(isokinetic_icc$mean[1],3)
